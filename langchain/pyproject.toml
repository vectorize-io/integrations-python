[project]
name = "langchain-vectorize"
version = "0.0.3"
description = "An integration package connecting Vectorize and LangChain"
readme = "README.md"
keywords = ["langchain", "vectorize", "retrieval", "search"]
authors = [
    { name = "Vectorize", email = "contact@vectorize.io" },
]
requires-python = ">=3.9"
dependencies = [
    "langchain-core>=0.3.45",
    "vectorize-client>=0.4.0",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
license = "MIT"

[project.urls]
Repository = "https://github.com/vectorize-io/integrations-python.git"
Issues = "https://github.com/vectorize-io/integrations-python/issues"

[dependency-groups]
dev = [
    "mypy>=1.17.1,<1.18",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.26.0",
    "ruff>=0.12.7,<0.13",
    "langchain-tests>=0.3.20",
    "requests>=2.31.0",
    "types-requests>=2.31.0",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # Messes with the formatter
    "ISC001", # Messes with the formatter
    "PERF203", # Rarely useful
    "PLR09", # Too many something (arg, statements, etc)
    "RUF012", # Doesn't play well with pydantic. See https://github.com/astral-sh/ruff/issues/13630
]
pydocstyle.convention = "google"
flake8-annotations.allow-star-arg-any = true
flake8-annotations.mypy-init-return = true
pyupgrade.keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D1",
    "PLR2004",
    "S101",
]

[tool.mypy]
strict = true
strict_bytes = true
enable_error_code = "deprecated"
warn_unreachable = true
pretty = true
show_error_codes = true
show_error_context = true

[tool.hatch.build.targets.wheel]
packages = ["langchain_vectorize"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
asyncio_mode = "auto"
